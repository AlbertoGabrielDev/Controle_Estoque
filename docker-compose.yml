version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: ./php/Dockerfile
    container_name: laravel_app
    volumes:
      # Código: se estiver em Windows/Mac, prefira 'delegated'
      - ./src:/var/www/html:delegated
      # Mantém diretórios quentes fora do bind-mount (rápido)
      - vendor:/var/www/html/vendor
      - bootstrap_cache:/var/www/html/bootstrap/cache
      - storage:/var/www/html/storage
    environment:
      APP_ENV: local
      DB_HOST: db
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      LOG_CHANNEL: stderr
      REDIS_HOST: redis
      RUN_MIGRATIONS: "1"
      MIGRATE_FRESH: "0"
      RUN_SEED: "1"
      SEED_CLASS: "DatabaseSeeder"
      DB_WAIT_RETRIES: "30"
      DB_WAIT_SLEEP: "2"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - db
      - redis
    networks:
      - laravel-network
    ports:
      - "9000:9000"

  webserver:
    image: nginx:alpine
    container_name: nginx_server
    ports:
      - "8000:80"
    volumes:
      - ./src:/var/www/html:delegated
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - laravel-network

  db:
    image: mysql:8.0
    container_name: mysql_db
    ports:
      - "3306:3306"
    env_file:
      - ./src/.env
    command: --default-authentication-plugin=mysql_native_password --max_connections=300
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - laravel-network

  redis:
    image: redis:7-alpine
    container_name: redis_cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - laravel-network

volumes:
  mysql_data:
  redis_data:
  vendor:
  bootstrap_cache:
  storage:

networks:
  laravel-network:
    driver: bridge
